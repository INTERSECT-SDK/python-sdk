[project]
name = "intersect-sdk"
description = "Python SDK to interact with INTERSECT"
authors = [
    {name = "Andrew Ayres", email = "ayresaf@ornl.gov"},
    {name = "Matthew Baker", email = "bakermb@ornl.gov"},
    {name = "Gregory Cage", email = "cagege@ornl.gov"},
    {name = "Lance Drane", email = "dranelt@ornl.gov"},
    {name = "John Hetrick", email = "hetrickjm@ornl.gov"},
    {name = "Seth Hitefield", email = "hitefieldsd@ornl.gov"},
    {name = "Marshall McDonnell", email = "mcdonnellmt@ornl.gov"},
    {name = "Jesse McGaha", email = "mcgahajr@ornl.gov"},
    {name = "Robert Smith", email = "smithrw@ornl.gov"},
    {name = "Gavin Wiggins", email = "wigginsg@ornl.gov"},
]
readme = "README.md"
#license = {text = "BSD-3-Clause"}
requires-python = ">=3.8.10,<4.0"
keywords = ["intersect"]
dynamic = ["version"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "pydantic>=2.5.3,<3.0.0",
    "retrying>=1.3.4,<2.0.0",
    "paho-mqtt>=1.6.1,<2.0.0",
    "minio>=7.2.3",
]

[project.optional-dependencies]
amqp = [
    "pika>=1.3.2,<2.0.0",
]

[tool.pdm.dev-dependencies]
lint = [
    "pre-commit>=3.3.1",
    "ruff>=0.1.13",
    "mypy>=1.3.0",
]
test = [
    "pytest>=7.3.2",
    "pytest-cov>=4.1.0",
    "httpretty>=1.1.4",
]
doc = [
    "sphinx>=5.3.0",
    "furo>=2023.3.27",
]

[tool.pdm.scripts]
test = "pytest tests/unit/ --cov=."
test-debug = "pytest tests/unit/ --cov=. -s"
test-report = "pytest tests/unit/ --cov=. --junitxml=reports/report_unit.xml"
test-coverage = "pytest --cov=. --cov-fail-under=70 --cov-report=html:reports/htmlcov/ --cov-report=xml:reports/coverage.xml tests/unit/"
integration = "pytest tests/integration/"
integration-debug = "pytest tests/integration/ -s"
integration-report = "pytest tests/integration/ --junitxml=reports/report_integration.xml"
integration-coverage = "pytest --cov=. --cov-fail-under=70 --cov-report=html:reports/htmlcov/ --cov-report=xml:reports/coverage.xml tests/integration/"
lint = {composite = ["lint-format", "lint ruff", "lint-mypy"]}
lint-format = "ruff format"
lint-ruff = "ruff check --fix"
lint-mypy = "mypy src/intersect_sdk/"

[tool.pdm.build]
package-dir = "src"

[tool.pdm.version]
source = "file"
path = "src/intersect_sdk/version.py"

[tool.ruff]
target-version = "py38"
line-length = 100
isort = { known-first-party = ['src'] }
format = {quote-style = 'single'}
flake8-quotes = {inline-quotes = 'single', multiline-quotes = 'double'}
mccabe = { max-complexity = 20 }
pylint = { max-args = 10, max-branches = 20, max-returns = 10 }
# pyflakes and the relevant pycodestyle rules are already configured
extend-select = [
    'C90', # mccabe complexity
    'I', # isort
    'UP', # pyupgrade
    'ANN', # flake8-annotations
    'ASYNC', # flake8-async
    'S', # flake8-bandit
    'BLE', # flake8-blind-except
    'B', # flake8-bugbear
    'A', # flake8-builtins
    'COM', # flake8-commas
    'C4', # flake8-comprehensions
    'EM', # flake8-error-message
    'ISC', # flake8-implicit-string-concat
    'ICN', # flake8-import-conventions
    'G', # flake8-logging-format
    'PIE', # flake8-PIE
    'T20', # flake8-T20
    'PYI', # flake8-pyi
    'PT', # flake8-pytest-style
    'Q', # flake8-quotes
    'RSE', # flake8-raise
    'RET', # flake8-return
    'SLF', # flake8-self
    'SLOT', # flake8-slots
    'SIM', # flake8-simplify
    'TCH', # flake8-type-checking
    'ARG', # flake8-unused-arguments
    'PL', # pylint
    'FLY', # flynt
    'RUF', # RUFF additional rules
]
# If you're seeking to disable a rule, first consider whether the rule is overbearing, or if it should only be turned off for your usecase.
ignore = [
    'COM812', # formatter, handled by Ruff format
    'ISC001', # formatter, handled by Ruff format
    'SIM105', # "with contextlib.suppress():" is slower than try-except-pass
    'ANN101', # don't need to annotate "self" typing
    'ANN102', # don't need to annotate "cls" typing for class methods
    'ANN401', # allow "Any" typing, use with care
    'PLR2004', # allow "magic numbers"
]

[tool.ruff.extend-per-file-ignores]
'__init__.py' = ['F401'] # standard Python rationale
'examples/**/*' = [
    'T20', # allow print/pprint statements in examples
]
'tests/**/*' = [
    'S101', # allow assert statements in tests
]

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unreachable = true

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"
