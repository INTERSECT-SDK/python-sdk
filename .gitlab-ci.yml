stages:
  - build
  - test
  - publish-chart
  - package
  - deploy-docs


variables:
  GIT_STRATEGY: clone
  CONTAINER_URL: "${CI_REGISTRY_IMAGE}/base"
  CONTAINER_DOCS_URL: "${CI_REGISTRY_IMAGE}/docs"
  BROKER_CONTAINER: "code.ornl.gov:4567/intersect/sdk/broker/main:latest"

# This import is for the func_rse_docker_* functions
before_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup

after_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup
  - sudo chown -R gitlab-runner .

container-build:
  stage: build
  script:
    - >
      docker build
      -f Dockerfile
      -t intersect-sdk-python .
    - docker tag intersect-sdk-python $CONTAINER_URL/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
    - docker tag intersect-sdk-python $CONTAINER_URL/$CI_COMMIT_REF_NAME:latest
    - docker push $CONTAINER_URL/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
    - docker push $CONTAINER_URL/$CI_COMMIT_REF_NAME:latest
  tags:
    - intersect-sdk-builder

lint:
  stage: test
  script:
    # TODO -> forbid mypy command from failing
    - >
      docker run --rm $CONTAINER_URL/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA sh -ec "
      pdm run ruff check;
      pdm run ruff format --check;
      pdm run lint-mypy;
      "
  tags:
    - intersect-sdk-builder

test-suite-with-coverage:
  stage: test
  script:
    - docker-compose up -d
    - >
      docker run
      --name intersect-tester
      --network host
      $CONTAINER_URL/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
      pdm run test-all
    - docker cp intersect-tester:/sdk/reports reports
    - sudo sed -i "s:<source>/sdk:<source>${CI_BUILDS_DIR}/${CI_PROJECT_PATH}:" reports/coverage_report.xml
  coverage: '/coverage: \d+.\d+%/' # for GitLab<15.0 use project settings, this line is noop
  artifacts:
    when: always
    reports:
      junit: reports/junit.xml
      coverage_report:
        coverage_format: cobertura
        path: reports/coverage_report.xml
    paths:
      - reports/
  tags:
    - intersect-sdk-builder

build-docs:
  stage: test
  script:
    # read Dockerfile from stdin with no build context
    - >
      docker build
      --build-arg IMAGE=${CONTAINER_URL}/$CI_COMMIT_REF_NAME
      --build-arg TAG=${CI_COMMIT_SHORT_SHA}
      -t intersect-sdk-python-docs - < docs/Dockerfile
    - >
      docker tag
      intersect-sdk-python-docs
      $CONTAINER_DOCS_URL/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
    - >
      docker tag
      intersect-sdk-python-docs
      $CONTAINER_DOCS_URL/$CI_COMMIT_REF_NAME:latest
    - docker push $CONTAINER_DOCS_URL/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
    - docker push $CONTAINER_DOCS_URL/$CI_COMMIT_REF_NAME:latest
  tags:
    - intersect-sdk-builder

publish-chart:
  stage: publish-chart
  variables:
    KUBECTL_IMAGE: code.ornl.gov:4567/rse/images/kubectl:1.23.3-debian-10-r13_helm-3.8.1
  script:
    - docker pull ${KUBECTL_IMAGE}
    - >
      docker run --rm --name kubectl
      -v $PWD:/mount
      --workdir /mount
      --user $UID:$UID
      -e CI_JOB_TOKEN=${CI_JOB_TOKEN}
      -e CI_API_V4_URL=${CI_API_V4_URL}
      -e CI_PROJECT_ID=${CI_PROJECT_ID}
      -e CI_COMMIT_REF_NAME=${CI_COMMIT_REF_NAME}
      ${KUBECTL_IMAGE} helm-publish-chart-with-gitlab-ci chart
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
      changes:
        - chart/**/*
  tags:
    - intersect-sdk-builder

publish-package:
  stage: package
  script:
    - docker login --username=$CI_REGISTRY_USER --password=$CI_REGISTRY_PASSWORD $CI_REGISTRY
    - >
      docker run --rm
      $CONTAINER_URL/$CI_COMMIT_REF_NAME:$CI_COMMIT_SHORT_SHA
      pdm publish
      --username gitlab-ci-token
      --password "$CI_JOB_TOKEN"
      --repository "https://code.ornl.gov/api/v4/projects/${CI_PROJECT_ID}/packages/pypi"
  tags:
    - intersect-sdk-builder
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+.*$/

deploy-docs-latest:
  stage: deploy-docs
  trigger:
    project: intersect/devops/deployments/ornl-cloud-k8s
    branch: main
    strategy: depend
  inherit:
    variables: false
  variables:
    TRIGGER_UPSTREAM_BRANCH: next
    TRIGGER_UPSTREAM_CHART_NAME: intersect-sdk-python-docs
    TRIGGER_UPSTREAM_IMAGE_TAG: ${CI_COMMIT_SHORT_SHA}
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

deploy-docs-latest-tag:
  stage: deploy-docs
  trigger:
    project: intersect/devops/deployments/ornl-cloud-k8s
    branch: main
    strategy: depend
  inherit:
    variables: false
  variables:
    TRIGGER_UPSTREAM_BRANCH: main
    TRIGGER_UPSTREAM_CHART_NAME: intersect-sdk-python-docs
    TRIGGER_UPSTREAM_IMAGE_TAG: ${CI_COMMIT_SHORT_SHA}
  rules:
    - if: $CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+.*$/
