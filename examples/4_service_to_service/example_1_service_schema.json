{
  "asyncapi": "2.6.0",
  "x-intersect-version": "0.8.3",
  "info": {
    "title": "example-organization.example-facility.example-system.example-subsystem.service-one",
    "description": "INTERSECT schema",
    "version": "0.0.0"
  },
  "defaultContentType": "application/json",
  "capabilities": {
    "intersect_sdk": {
      "endpoints": {},
      "events": {},
      "status": {
        "$ref": "#/components/schemas/IntersectCoreStatus"
      },
      "description": "Core capability present in every INTERSECT Service.\n\nThis may be called explicitly by any Client interacting with any SDK service. Set the operation to be \"intersect_sdk.<ENDPOINT>\"."
    },
    "ServiceOne": {
      "endpoints": {
        "pass_text_to_service_2": {
          "publish": {
            "message": {
              "schemaFormat": "application/vnd.aai.asyncapi+json;version=2.6.0",
              "contentType": "application/json",
              "traits": {
                "$ref": "#/components/messageTraits/commonHeaders"
              },
              "payload": {
                "type": "null",
                "title": "pass_text_to_service_2"
              }
            },
            "description": "Takes in a string parameter and sends it to service 2."
          },
          "subscribe": {
            "message": {
              "schemaFormat": "application/vnd.aai.asyncapi+json;version=2.6.0",
              "contentType": "application/json",
              "traits": {
                "$ref": "#/components/messageTraits/commonHeaders"
              },
              "payload": {
                "type": "string",
                "title": "text"
              }
            },
            "description": "Takes in a string parameter and sends it to service 2."
          }
        }
      },
      "events": {
        "response_event": {
          "type": "string",
          "title": "response_event"
        }
      },
      "status": {
        "type": "string",
        "title": "Status"
      },
      "description": "Service 1 Capability."
    }
  },
  "components": {
    "schemas": {
      "IntersectCoreStatus": {
        "description": "Core status information about the INTERSECT-SDK Service as a whole.",
        "properties": {
          "uptime": {
            "format": "duration",
            "title": "Uptime",
            "type": "string"
          },
          "logical_cpus": {
            "title": "Logical CPUs",
            "type": "integer"
          },
          "physical_cpus": {
            "title": "Physical CPUs",
            "type": "integer"
          },
          "cpu_percentages": {
            "items": {
              "type": "number"
            },
            "title": "CPU Percentages",
            "type": "array"
          },
          "service_cpu_percentage": {
            "title": "Service CPU Usage Percentage",
            "type": "number"
          },
          "memory_total": {
            "title": "Memory Total",
            "type": "integer"
          },
          "memory_usage_percentage": {
            "title": "Memory Usage Percentage",
            "type": "number"
          },
          "service_memory_percentage": {
            "title": "Service Memory Usage Percentage",
            "type": "number"
          },
          "disk_total": {
            "title": "Disk Total",
            "type": "integer"
          },
          "disk_usage_percentage": {
            "title": "Disk Usage Percentage",
            "type": "number"
          }
        },
        "required": [
          "uptime",
          "logical_cpus",
          "physical_cpus",
          "cpu_percentages",
          "service_cpu_percentage",
          "memory_total",
          "memory_usage_percentage",
          "service_memory_percentage",
          "disk_total",
          "disk_usage_percentage"
        ],
        "title": "IntersectCoreStatus",
        "type": "object"
      }
    },
    "messageTraits": {
      "commonHeaders": {
        "messageHeaders": {
          "$defs": {
            "IntersectDataHandler": {
              "description": "What data transfer type do you want to use for handling the request/response?\n\nDefault: MESSAGE",
              "enum": [
                0,
                1
              ],
              "title": "IntersectDataHandler",
              "type": "integer"
            }
          },
          "description": "Matches the current header definition for INTERSECT messages.\n\nALL messages should contain this header.",
          "properties": {
            "source": {
              "description": "source of the message",
              "pattern": "^[a-z0-9][-a-z0-9.]*[-a-z0-9]$",
              "title": "Source",
              "type": "string"
            },
            "destination": {
              "description": "destination of the message",
              "pattern": "^[a-z0-9][-a-z0-9.]*[-a-z0-9]$",
              "title": "Destination",
              "type": "string"
            },
            "created_at": {
              "description": "the UTC timestamp of message creation",
              "format": "date-time",
              "title": "Created At",
              "type": "string"
            },
            "sdk_version": {
              "description": "SemVer string of SDK's version, used to check for compatibility",
              "pattern": "^\\d+\\.\\d+\\.\\d+$",
              "title": "Sdk Version",
              "type": "string"
            },
            "data_handler": {
              "$ref": "#/components/messageTraits/commonHeaders/userspaceHeaders/$defs/IntersectDataHandler",
              "default": 0,
              "description": "Code signifying where data is stored."
            },
            "has_error": {
              "default": false,
              "description": "If this value is True, the payload will contain the error message (a string)",
              "title": "Has Error",
              "type": "boolean"
            }
          },
          "required": [
            "source",
            "destination",
            "created_at",
            "sdk_version"
          ],
          "title": "UserspaceMessageHeader",
          "type": "object"
        },
        "eventHeaders": {
          "$defs": {
            "IntersectDataHandler": {
              "description": "What data transfer type do you want to use for handling the request/response?\n\nDefault: MESSAGE",
              "enum": [
                0,
                1
              ],
              "title": "IntersectDataHandler",
              "type": "integer"
            }
          },
          "description": "Matches the current header definition for INTERSECT messages.\n\nALL messages should contain this header.",
          "properties": {
            "source": {
              "description": "source of the message",
              "pattern": "^[a-z0-9][-a-z0-9.]*[-a-z0-9]$",
              "title": "Source",
              "type": "string"
            },
            "created_at": {
              "description": "the UTC timestamp of message creation",
              "format": "date-time",
              "title": "Created At",
              "type": "string"
            },
            "sdk_version": {
              "description": "SemVer string of SDK's version, used to check for compatibility",
              "pattern": "^\\d+\\.\\d+\\.\\d+$",
              "title": "Sdk Version",
              "type": "string"
            },
            "data_handler": {
              "$ref": "#/components/messageTraits/commonHeaders/eventHeaders/$defs/IntersectDataHandler",
              "default": 0,
              "description": "Code signifying where data is stored."
            },
            "capability_name": {
              "title": "Capability Name",
              "type": "string"
            },
            "event_name": {
              "title": "Event Name",
              "type": "string"
            }
          },
          "required": [
            "source",
            "created_at",
            "sdk_version",
            "capability_name",
            "event_name"
          ],
          "title": "EventMessageHeaders",
          "type": "object"
        }
      }
    }
  }
}
